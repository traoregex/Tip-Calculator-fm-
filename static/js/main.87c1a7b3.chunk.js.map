{"version":3,"sources":["BillBox.js","PeopleBox.js","CustomRatio.js","FixedRatio.js","RatioList.js","ScreenDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["BillBox","getDataInput","clear","useState","currentValue","setCurrentValue","useEffect","className","value","onChange","event","type","target","placeholder","PeopleBox","error","setError","icon","faUser","parseInt","CustomRatio","activeRatio","updateState","getRatio","data","onClick","FixedRatio","ratio","RatioList","setActiveRatio","getState","ScreenDisplay","tip","total","reset","dataInput","inputBill","console","log","id","inputPeople","inputTip","App","setTip","setTotal","setDataInput","clearInput","setClearInput","onGetDataInput","parseFloat","temp","calculate","tempTip","displayTip","displayTotal","onDisplayData","Math","trunc","toFixed","setTimeout","rel","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mWA6BeA,MA1Bf,YAA2C,IAAxBC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,MAE7B,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAaA,OANAC,qBAAU,WACFJ,GACAG,EAAgB,OAKpB,gCACI,sBAAME,UAAU,UAAhB,kBACA,sBAAKA,UAAU,UAAf,UACI,qCACA,uBAAOC,MAAOJ,EAAcK,SAhBvB,SAACC,GACdT,EAAa,CAAEU,KAAM,OAAQH,MAAOE,EAAME,OAAOJ,QACjDH,EAAgBK,EAAME,OAAOJ,QAc2BG,KAAK,SAASE,YAAY,a,qBCoB3EC,MAtCf,YAA2C,IAAvBb,EAAsB,EAAtBA,aAAcC,EAAQ,EAARA,MAC9B,EAA0BC,oBAAS,GAAnC,mBAAOY,EAAP,KAAcC,EAAd,KACA,EAAwCb,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAoBA,OANAC,qBAAU,WACFJ,GACAG,EAAgB,OAKpB,sBAAKE,UAAU,qBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,sBAAMA,UAAU,UAAhB,8BACA,sBAAMA,UAAWQ,EAAQ,cAAgB,OAAzC,8BAEJ,sBAAKR,UAAWQ,EAAQ,sBAAwB,UAAhD,UACI,sBAAMR,UAAU,SAAhB,SACI,cAAC,IAAD,CAAiBU,KAAMC,QAE3B,uBAAOT,SA5BF,SAACC,GAEuB,IAAjCS,SAAST,EAAME,OAAOJ,OAEtBQ,GAAS,IAETA,GAAS,GACTf,EAAa,CAAEU,KAAM,SAAUH,MAAOE,EAAME,OAAOJ,QACnDH,EAAgBK,EAAME,OAAOJ,SAoBEA,MAAOJ,EAAcO,KAAK,SAASE,YAAY,aCf3EO,MApBf,YAAoD,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YAE1BC,EAAW,SAACb,GAGdY,EACI,CACIX,KAAM,SACNa,KAAOd,EAAME,OAAOJ,OAAS,KAAOE,EAAME,OAAOJ,OAAS,EAAKE,EAAME,OAAOJ,MAAQ,KAKhG,OACI,qBAAKiB,QAASF,EAAUhB,UAA2B,WAAhBc,EAA2B,uBAAyB,UAAvF,SACI,uBAAOZ,SAAUc,EAAUZ,KAAK,OAAOE,YAAY,c,MCAhDa,MAdf,YAA0D,IAApCC,EAAmC,EAAnCA,MAAON,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YAOtC,OACI,sBAAKG,QANQ,WACbH,EAAY,CAACX,KAAM,QAASa,KAAMG,KAKVpB,UAAWc,IAAgBM,EAAQ,iBAAmB,QAA9E,UACKA,EADL,Q,MC6BOC,MAnCf,YAA2C,IAAvB3B,EAAsB,EAAtBA,aAAcC,EAAQ,EAARA,MAE9B,EAAsCC,mBAAS,IAA/C,mBAAOkB,EAAP,KAAoBQ,EAApB,KAEMC,EAAW,SAAC,GAAkB,IAAjBnB,EAAgB,EAAhBA,KAAMa,EAAU,EAAVA,KAEjBK,EADS,WAATlB,EACeA,EAEAa,GAEnBvB,EAAa,CAACU,KAAM,MAAOH,MAAOgB,KAStC,OANAlB,qBAAU,WACFJ,GACA2B,EAAe,OAKnB,sBAAKtB,UAAU,qBAAf,UACI,sBAAMA,UAAU,UAAhB,0BACA,sBAAKA,UAAU,aAAf,UACI,cAAC,EAAD,CAAYc,YAAaA,EAAaC,YAAaQ,EAAUH,MAAO,IACpE,cAAC,EAAD,CAAYN,YAAaA,EAAaC,YAAaQ,EAAUH,MAAO,KACpE,cAAC,EAAD,CAAYN,YAAaA,EAAaC,YAAaQ,EAAUH,MAAO,KACpE,cAAC,EAAD,CAAYN,YAAaA,EAAaC,YAAaQ,EAAUH,MAAO,KACpE,cAAC,EAAD,CAAYN,YAAaA,EAAaC,YAAaQ,EAAUH,MAAO,KACpE,cAAC,EAAD,CAAaN,YAAaA,EAAaC,YAAaQ,W,MCMrDC,MAnCf,YAAwD,IAAhCC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,UAUvC,OAJIA,EAAUC,WACVC,QAAQC,IAAI,gBAIZ,sBAAK/B,UAAU,SAAf,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,SAAf,UACI,iCACI,sBAAMA,UAAU,aAAhB,wBACA,sBAAMA,UAAU,kBAAhB,yBAEJ,uBAAMA,UAAU,WAAhB,cAA8ByB,QAElC,sBAAKzB,UAAU,SAAf,UACI,iCACI,sBAAMA,UAAU,aAAhB,mBACA,sBAAMA,UAAU,kBAAhB,yBAEJ,uBAAMA,UAAU,WAAhB,cAA8B0B,WAGtC,qBAAK1B,UAAU,SAAf,SACI,wBAAQgC,GAAMJ,EAAUC,WAAaD,EAAUK,aAAeL,EAAUM,SAAY,eAAiB,QAAShB,QAASS,EAAvH,yBCqEDQ,MA9Ff,WAEE,MAAsBvC,mBAAS,QAA/B,mBAAO6B,EAAP,KAAYW,EAAZ,KACA,EAA0BxC,mBAAS,QAAnC,mBAAO8B,EAAP,KAAcW,EAAd,KACA,EAAkCzC,mBAAS,CAAEsC,SAAU,EAAGL,UAAW,EAAGI,YAAa,IAArF,mBAAOL,EAAP,KAAkBU,EAAlB,KACA,EAAoC1C,oBAAS,GAA7C,mBAAO2C,EAAP,KAAmBC,EAAnB,KAoBMC,EAAiB,SAAC,GAAqB,IAAnBrC,EAAkB,EAAlBA,KAAMH,EAAY,EAAZA,MAC9B,GAAa,SAATG,EAAiB,CACnBwB,EAAUC,UAAYa,WAAWzC,GACjC,IAAM0C,EAAI,eAAQf,GAClBU,EAAaK,GAGf,GAAa,QAATvC,EAAgB,CAClBwB,EAAUM,SAAWQ,WAAWzC,GAChC,IAAM0C,EAAI,eAAQf,GAClBU,EAAaK,GAGf,GAAa,WAATvC,EAAmB,CACrBwB,EAAUK,YAAcS,WAAWzC,GACnC,IAAM0C,EAAI,eAAQf,GAClBU,EAAaK,GAGXf,EAAUC,WAAaD,EAAUK,aAAeL,EAAUM,UAE5DU,EAAUhB,IASRgB,EAAY,SAAC,GAA0C,IAAxCf,EAAuC,EAAvCA,UAAWI,EAA4B,EAA5BA,YACxBY,EAAYhB,EADwC,EAAfK,SACD,IAAOD,GAhD7B,SAAC,GAAgC,IAA/Ba,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,aAClCX,EAAOU,GACPT,EAASU,GAkDTC,CAAc,CAACF,WAHMG,KAAKC,MAAgB,IAATL,GAAgB,IAGRE,cAFvBF,EAAWhB,EAAYI,GACRkB,QAAQ,MAI3C,OACE,8BACE,qBAAKnD,UAAU,cAAf,SACA,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,+BACE,sBAAMA,UAAU,aAAhB,kBACA,sBAAMA,UAAU,aAAhB,uBAGJ,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CAASN,aAAc+C,EAAgB9C,MAAO4C,IAC9C,cAAC,EAAD,CAAW7C,aAAc+C,EAAgB9C,MAAO4C,IAChD,cAAC,EAAD,CAAW7C,aAAc+C,EAAgB9C,MAAO4C,OAElD,qBAAKvC,UAAU,UAAf,SACE,cAAC,EAAD,CAAe4B,UAAWA,EAAWH,IAAKA,EAAKC,MAAOA,EAAOC,MAnEvD,WACdS,EAAO,QACPC,EAAS,QAETG,GAAc,GACdF,EAAa,IAEbc,YAAW,WACTZ,GAAc,KACb,QA4DG,sBAAKxC,UAAU,cAAf,0BACe,mBAAGqD,IAAI,aAAaC,KAAK,wEAAwEjD,OAAO,SAAxG,6BADf,cAEW,mBAAGgD,IAAI,aAAaC,KAAK,iDAAzB,kCAFX,kBC9EKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.87c1a7b3.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './BillBox.scss';\n\nfunction BillBox({ getDataInput, clear }) {\n\n    const [currentValue, setCurrentValue] = useState('');\n    \n    const getValue = (event) => {\n        getDataInput({ type: 'bill', value: event.target.value });\n        setCurrentValue(event.target.value);\n    }\n\n    useEffect(() => {\n        if (clear) {\n            setCurrentValue('');\n        }\n    })\n\n    return (\n        <div>\n            <span className=\"i-label\">Bill</span>\n            <div className=\"c-input\">\n                <span>$</span>\n                <input value={currentValue} onChange={getValue} type=\"number\" placeholder=\"0\" />\n            </div>\n        </div>\n    );\n}\n\nexport default BillBox;","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport './PeopleBox.scss';\n\nfunction PeopleBox({getDataInput, clear}) {\n    const [error, setError] = useState(false);\n    const [currentValue, setCurrentValue] = useState('');\n\n    const getValue = (event) => {\n        // console.log(event.target.value);\n        if (parseInt(event.target.value) === 0) {\n            // console.log('error');\n            setError(true);\n        } else {\n            setError(false);\n            getDataInput({ type: 'people', value: event.target.value });\n            setCurrentValue(event.target.value);\n        }\n    }\n\n    useEffect(() => {\n        if (clear) {\n            setCurrentValue('');\n        }\n    })\n\n    return (\n        <div className=\"people-box-wrapper\">\n            <div className=\"flex-side\">\n                <span className=\"i-label\">Number of Person</span>\n                <span className={error ? 'error-label' : 'hide'}>Can't be zero</span>\n            </div>\n            <div className={error ? 'c-input error-input' : 'c-input'}>\n                <span className=\"medium\">\n                    <FontAwesomeIcon icon={faUser} />\n                </span>\n                <input onChange={getValue} value={currentValue} type=\"number\" placeholder=\"0\" />\n            </div>\n        </div>\n    );\n}\n\nexport default PeopleBox;","import React from 'react';\n\nfunction CustomRatio({ activeRatio, updateState }) {\n\n    const getRatio = (event) => {\n        // console.log(event.target.value);\n        // console.log('active ratio: ',activeRatio);\n        updateState(\n            {\n                type: 'custom',\n                data: (event.target.value <= 100 && event.target.value >= 0) ? event.target.value : 0\n            }\n        );\n    }\n\n    return (\n        <div onClick={getRatio} className={activeRatio === 'custom' ? 'active-input c-input' : 'c-input'}>\n            <input onChange={getRatio} type=\"text\" placeholder=\"Custom\" />\n        </div>\n    );\n}\n\nexport default CustomRatio;","import React from 'react';\nimport './FixedRatio.scss';\n\nfunction FixedRatio({ ratio, activeRatio, updateState }) {\n\n    const getRatio = () => {\n        updateState({type: 'fixed', data: ratio});\n    }\n    \n\n    return (\n        <div onClick={getRatio} className={activeRatio === ratio ? 'ratio isActive' : 'ratio'}>\n            {ratio}%\n        </div>\n    );\n}\n\nexport default FixedRatio;","import React, { useState, useEffect } from 'react';\nimport CustomRatio from './CustomRatio';\nimport FixedRatio from './FixedRatio';\nimport './RatioList.scss';\n\nfunction RatioList({getDataInput, clear}) {\n\n    const [activeRatio, setActiveRatio] = useState('');\n\n    const getState = ({type, data}) => {\n        if (type === 'custom') {\n            setActiveRatio(type);\n        } else {\n            setActiveRatio(data);\n        }\n        getDataInput({type: 'tip', value: data});\n    }\n\n    useEffect(() => {\n        if (clear) {\n            setActiveRatio('');\n        }\n    })\n    \n    return (\n        <div className=\"ratio-list-wrapper\">\n            <span className=\"i-label\">Select Tip %</span>\n            <div className=\"ratio-grid\">\n                <FixedRatio activeRatio={activeRatio} updateState={getState} ratio={5} />\n                <FixedRatio activeRatio={activeRatio} updateState={getState} ratio={10} />\n                <FixedRatio activeRatio={activeRatio} updateState={getState} ratio={15} />\n                <FixedRatio activeRatio={activeRatio} updateState={getState} ratio={25} />\n                <FixedRatio activeRatio={activeRatio} updateState={getState} ratio={50} />\n                <CustomRatio activeRatio={activeRatio} updateState={getState} />\n            </div>\n        </div>\n    );\n\n}\n\nexport default RatioList;","import React from 'react';\nimport './ScreenDisplay.scss';\n\n\nfunction ScreenDisplay({tip, total, reset, dataInput}) {\n    // console.log(dataInput);\n    //tip!=='0.00'\n\n\n\n    if (dataInput.inputBill) {\n        console.log('Bill entered');\n    }\n\n    return (\n        <div className=\"screen\">\n            <div className=\"top\">\n                <div className=\"output\">\n                    <span>\n                        <span className=\"main-label\">Tip Amount</span>\n                        <span className=\"secondary-label\">/ person</span>\n                    </span>\n                    <span className=\"pricetag\">${ tip }</span>\n                </div>\n                <div className=\"output\">\n                    <span>\n                        <span className=\"main-label\">Total</span>\n                        <span className=\"secondary-label\">/ person</span>\n                    </span>\n                    <span className=\"pricetag\">${ total }</span>\n                </div>\n            </div>\n            <div className=\"bottom\">\n                <button id={ (dataInput.inputBill || dataInput.inputPeople || dataInput.inputTip) ? 'active-state' : 'blank'} onClick={reset}>Reset</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ScreenDisplay;","\nimport './App.scss';\nimport BillBox from './BillBox';\nimport PeopleBox from './PeopleBox';\nimport RatioList from './RatioList';\nimport ScreenDisplay from './ScreenDisplay';\nimport React, { useState } from 'react';\n\nfunction App() {\n\n  const [tip, setTip] = useState('0.00');\n  const [total, setTotal] = useState('0.00');\n  const [dataInput, setDataInput] = useState({ inputTip: 0, inputBill: 0, inputPeople: 0 });\n  const [clearInput, setClearInput] = useState(false);\n  \n\n  const onDisplayData = ({displayTip, displayTotal}) => {\n    setTip(displayTip);\n    setTotal(displayTotal);\n  }\n\n  const onReset = () => {\n    setTip('0.00');\n    setTotal('0.00');\n\n    setClearInput(true);\n    setDataInput({});\n\n    setTimeout(() => {\n      setClearInput(false);\n    }, 1);\n  }\n\n  const onGetDataInput = ({ type, value }) => {\n    if (type === 'bill') {\n      dataInput.inputBill = parseFloat(value);\n      const temp = { ...dataInput };\n      setDataInput(temp);\n    }\n\n    if (type === 'tip') {\n      dataInput.inputTip = parseFloat(value);\n      const temp = { ...dataInput };\n      setDataInput(temp);\n    }\n\n    if (type === 'people') {\n      dataInput.inputPeople = parseFloat(value);\n      const temp = { ...dataInput };\n      setDataInput(temp);\n    }\n\n    if (dataInput.inputBill && dataInput.inputPeople && dataInput.inputTip) {\n      // console.log('CALCUL');\n      calculate(dataInput);\n    } /*else {\n      onReset();\n    }*/\n\n\n    // console.log('data input: ', dataInput);\n  }\n\n  const calculate = ({ inputBill, inputPeople, inputTip }) => {\n    const tempTip = ((inputBill * inputTip) / 100) / inputPeople;\n    const tempTipTrunc = Math.trunc( tempTip* 100) / 100;\n    const tempTotal = tempTip + (inputBill / inputPeople);\n    const tempTotalTrunc = tempTotal.toFixed(2);\n    onDisplayData({displayTip: tempTipTrunc, displayTotal: tempTotalTrunc});\n  }\n\n  return (\n    <div>\n      <div className=\"flex-center\">\n      <div className=\"main-wrapper\">\n        <div className=\"title-wrapper\">\n          <h1>\n            <span className=\"part-title\">spli</span>\n            <span className=\"part-title\">tter</span>\n          </h1>\n        </div>\n        <div className=\"calculator\">\n          <div className=\"control\">\n            <BillBox getDataInput={onGetDataInput} clear={clearInput} />\n            <RatioList getDataInput={onGetDataInput} clear={clearInput} />\n            <PeopleBox getDataInput={onGetDataInput} clear={clearInput} />\n          </div>\n          <div className=\"display\">\n            <ScreenDisplay dataInput={dataInput} tip={tip} total={total} reset={onReset} />\n          </div>\n          <div className=\"attribution\">\n            Challenge by <a rel=\"noreferrer\" href=\"https://www.frontendmentor.io/challenges/tip-calculator-app-ugJNGbJUX\" target=\"_blank\">Frontend Mentor</a>. \n            Coded by <a rel=\"noreferrer\" href=\"https://github.com/traoregex/tip-calculator-fm\">TRAORE Geraud Lionel</a>.\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}